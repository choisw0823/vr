    def call_gpt4o(self, text: str, video_images: List[str], video_info: List[Dict]) -> str:
        """
        o3 API 호출 (비전 전용 reranking)
        - 입력 이미지는 후보당 1장(3x4 grid, frame 1..12 라벨 포함)이며 메타데이터는 사용하지 않는다.
        - 출력 형식은 반드시 아래 두 줄만:
            <think> </think>
            <answer> [i] > [j] > [k] > ... </answer>
        """
        if not self.openai_api_key:
            print("OPENAI_API_KEY가 설정되지 않았습니다.")
            return ""

        # 1) 시스템 프롬프트: 형식 강제 (영어)
        system_prompt = """
        System Prompt: You are RankLLM, a vision-only reranker. You will receive a Query and N candidates. Each candidate is a single composite image arranged in a 3×4 grid (12 tiles) labeled “frame 1 … frame 12” in temporal order (left→right, top→bottom). There is NO metadata.

        Decision rules (concise):
        - Judge relevance ONLY from what is visible in the grids.
        - Down-rank clear mismatches (wrong domain/scene/action). Consider temporal coherence.
        - Tie-breakers (in order): action visibility/close-up > temporal coherence > low occlusion/clutter > overall coverage.

        ABSOLUTE OUTPUT CONTRACT (exactly two blocks; no extra text/markdown):
        <think>
        <content>
        [1] Describe the content of the video in detail, aware of temporal sequence and spatial information (Use full sentence. There should be noun, verb, and object fully.)
        [2] ex) A man wearing sunglasses and gloves stands beside the open hood of a parked car. He looks toward the camera, gestures, and speaks during frames 1 to 4 and again from frames 7 to 11. Although there are some intercut close-up shots of the engine, the man remains next to the same car throughout the clip. 
        [3] ... 
        [4] ...
        [5] ...
        </content>

        <contrast>
        - One-liner: why a higher-ranked item beats a lower-ranked item (because/whereas style). 
        - Add a few more one-liners as needed.
        - Sufficient reasoning for contrastive comparison.
        </contrast>

        <summary>
        1st=[i] (sufficient reasoning)
        2nd=[j] (sufficient reasoning)
        3rd=[k] (sufficient reasoning)
        4th=[m] (sufficient reasoning)
        5th=[n] (sufficient reasoning)
        </summary>
        </think>
        <answer> [i] > [j] > [k] > [m] > [n] </answer>

        Constraints:
        - Inside <think>, use ONLY the section tags <content>, <contrast>, <summary>.
        - Do NOT use any per-candidate XML-like tags (e.g., no <cand .../>); write lines as [N] text...
        - Keep all statements evidence-based from the grids; no speculation.
        - Always produce a total order in <answer> using indices [1]..[N].
        """